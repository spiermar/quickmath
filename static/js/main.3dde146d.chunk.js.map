{"version":3,"sources":["components/Home/Home.js","components/Lesson/Lesson.js","components/DoubleDigitSum/DoubleDigitSum.js","App.js","serviceWorker.js","index.js"],"names":["styles","logoContainer","height","textAlign","lessonButton","display","margin","marginBottom","backgroundColor","color","disabledLessonButton","buttonContainer","container","alignItems","Home","history","useHistory","style","alt","src","Button","variant","size","onClick","push","disabled","card","minWidth","cardContent","number","fontWeight","operand","marginLeft","marginRight","answer","marginTop","nextButton","fontSize","homeButton","position","top","left","Lesson","props","handleNextClick","console","log","state","firstNumber","secondNumber","Card","CardContent","Typography","gutterBottom","this","TextField","type","React","Component","withRouter","DoubleDigitSum","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3dde146d.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\n\nconst styles = {\n    logoContainer: {\n        height: 256,\n        textAlign: 'center',\n    },\n    lessonButton: {\n        display: 'block',\n        margin: 'auto',\n        marginBottom: 15,\n        backgroundColor: '#70C6C7',\n        color: '#F1FAEE',\n    },\n    disabledLessonButton: {\n        backgroundColor: '#DCF1E8',\n        color: '#86CFCE',\n    },\n    buttonContainer: {\n        margin: 'auto',\n    },\n    container: {\n        height: 'calc(100vh - 272px)',\n        display: 'flex',\n        alignItems: 'center',\n    }\n}\n\nfunction Home() {\n  let history = useHistory();\n  \n  return (\n    <div>\n      <div style={styles.logoContainer}>\n        <img alt=\"logo\" src=\"logo.png\" height=\"256px\" />\n      </div>\n      <div style={styles.container}>\n        <div style={styles.buttonContainer}>\n          <Button style={styles.lessonButton} variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => { history.push(\"/doubledigitsum\") }}>\n            Double Digit Sum\n          </Button>\n          <Button disabled style={{ ...styles.lessonButton, ...styles.disabledLessonButton}} variant=\"contained\" size=\"large\" color=\"primary\">\n            Triple Digit Sum\n          </Button>\n          <Button disabled style={{ ...styles.lessonButton, ...styles.disabledLessonButton}} variant=\"contained\" size=\"large\" color=\"primary\">\n            Double Digit Sub\n          </Button>\n          <Button disabled style={{ ...styles.lessonButton, ...styles.disabledLessonButton}} variant=\"contained\" size=\"large\" color=\"primary\">\n            Triple Digit Sub\n          </Button>\n          <Button disabled style={{ ...styles.lessonButton, ...styles.disabledLessonButton}} variant=\"contained\" size=\"large\" color=\"primary\">\n            Single Digit Multi\n          </Button>\n          <Button disabled style={{ ...styles.lessonButton, ...styles.disabledLessonButton}} variant=\"contained\" size=\"large\" color=\"primary\">\n            Double Digit Multi\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withRouter } from 'react-router-dom';\n\nconst styles = {\n    card: {\n        color: '#F1FAEE',\n        backgroundColor: '#70C6C7',\n        minWidth: 275,\n        margin: 'auto',\n    },\n    cardContent: {\n        textAlign: 'center',\n    },\n    container: {\n        height: 'calc(100vh - 16px)',\n        display: 'flex',\n        alignItems: 'center',\n    },\n    number: {\n        fontWeight: 500,\n        display: 'inline',\n    },\n    operand: {\n        display: 'inline',\n        marginLeft: 15,\n        marginRight: 15,\n    },\n    answer: {\n        marginTop: 25,\n        marginBottom: 45,\n        display: 'block',\n    },\n    nextButton: {\n        display: 'block',\n        margin: 'auto',\n        fontSize: 32,\n        marginBottom: 15,\n        backgroundColor: '#DCF1E8',\n        color: '#86CFCE',\n    },\n    homeButton: {\n        position: 'fixed',\n        top: 25,\n        left: 25,\n        backgroundColor: '#70C6C7',\n        color: '#F1FAEE',\n    }\n};\n\nclass Lesson extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            firstNumber: 56,\n            secondNumber: 21,\n        }\n    }\n\n    handleNextClick = () => {\n        console.log(\"next\")\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={styles.container}>\n                    <Button style={styles.homeButton} variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => { this.props.history.push(\"/\") }}>\n                        Home\n                    </Button>\n                    <Card style={styles.card}>\n                        <CardContent style={styles.cardContent}>\n                            <Typography style={styles.number} variant=\"h2\" gutterBottom>\n                                {this.state.firstNumber}\n                            </Typography>\n                            <Typography style={styles.operand} variant=\"h3\" gutterBottom>\n                                +\n                            </Typography>\n                            <Typography style={styles.number} variant=\"h2\" gutterBottom>\n                                {this.state.secondNumber}\n                            </Typography>\n                            <TextField style={styles.answer} variant=\"outlined\" type=\"number\" />\n                            <Button style={styles.nextButton} variant=\"contained\" size=\"large\" color=\"primary\" onClick={this.handleNextClick}>\n                                Next\n                            </Button>\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n        )\n    }\n}\n\nLesson.propTypes = {\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }),\n}\n\nexport default withRouter(Lesson);","import React from 'react';\nimport Lesson from '../Lesson';\n\nfunction DoubleDigitSum() {\n    return (\n        <Lesson />\n    )\n}\n\nexport default DoubleDigitSum;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Home from './components/Home';\nimport DoubleDigitSum from './components/DoubleDigitSum';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/doubledigitsum\">\n          <DoubleDigitSum />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}